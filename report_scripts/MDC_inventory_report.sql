SELECT	CHAIN_NAME,CLOSE_DATE,PRODUCT_ID,PRODUCT_CODE,PRODUCT_NAME
				,(case when CLOSING_STOCK_EA<0 and CLOSING_STOCK>=0
					then CLOSING_STOCK_EA/CAST(UOM as int)+CLOSING_STOCK-1
					else CLOSING_STOCK_EA/CAST(UOM as int)+CLOSING_STOCK
				end) AS CLOSING_STOCK
				,(case when CLOSING_STOCK_EA<0 and CLOSING_STOCK>=0
					then UOM + (CLOSING_STOCK_EA%CAST(UOM as int))
					else CLOSING_STOCK_EA%CAST(UOM as int)
				end) AS CLOSING_STOCK_EA,CLOSING_STOCK_EC
				,ACTUAL,ACTUAL_EA,ACTUAL_EC
		FROM
		(
			SELECT	
					CHAINS.DESCRIPTION+' - ('+CHAINS.CODE+')' as CHAIN_NAME,
					LIST.CLOSE_DATE,
					P.ID AS PRODUCT_ID,
					P.CODE AS PRODUCT_CODE,
					P.DESCRIPTION AS PRODUCT_NAME,
					UOM.DENOMINATOR AS UOM,
					MPLI.SEQUENCE,
					isnull(ITEM.OPENING_STOCK,0)+ITEM.RECEIVED-ITEM.SALES-ITEM.BREAKAGES+ITEM.Returned
						 as CLOSING_STOCK,
					isnull(ITEM.OPENING_STOCK_EC,0)+ITEM.RECEIVED_EC-ITEM.SALES_EC-ITEM.BREAKAGES_EC+ITEM.Returned_EC
						 as CLOSING_STOCK_EC,
					isnull(ITEM.OPENING_STOCK_EA,0)+ITEM.RECEIVED_EA-ITEM.SALES_EA-ITEM.BREAKAGES_EA+ITEM.Returned_EA
						 as CLOSING_STOCK_EA,
					ITEM.ACTUAL,
					ITEM.ACTUAL_EA,
					ITEM.ACTUAL_EC
			FROM INVENTORY_LIST_ITEM ITEM
				INNER JOIN INVENTORY_LIST LIST ON ITEM.INVENTORY_LIST_ID=LIST.ID
				INNER JOIN CHAINS ON LIST.CHAIN_ID=CHAINS.ID
				INNER JOIN View_Organization ORG ON CHAINS.ORG_ID=ORG.salesOfficeID
				INNER JOIN PRODUCTS P ON ITEM.PRODUCT_ID=P.ID 
				INNER JOIN MDC_PROD_LIST_ITEMS MPLI ON MPLI.PRODUCT_ID=P.ID 
					AND MPLI.MDC_PRODUCT_LIST_ID=LIST.CHAIN_ID
				LEFT JOIN PRODUCT_UOMS UOM ON P.ID=UOM.PRODUCT_ID
			WHERE CHAINS.id in(1740,1763)
		) TMP
		ORDER BY CHAIN_NAME,CLOSE_DATE DESC,SEQUENCE